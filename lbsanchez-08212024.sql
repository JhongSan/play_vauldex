--#1
CREATE TYPE "STATUS" AS ENUM ('ACTIVE', 'INACTIVE', 'DISABLED');
--#3
CREATE TYPE "GENDER" AS ENUM ('♂', '♀', '⚧');
--#2
CREATE TABLE "ACCOUNTS" (
	"ID" UUID PRIMARY KEY,
	"EMAIL" VARCHAR(255),
	"STATUS" "STATUS",
	"CREATED_AT" TIMESTAMP NOT NULL
);
--#4
CREATE TABLE "PROFILES" (
	"ACCOUNT_ID" UUID PRIMARY KEY,
	"FIRST_NAME" VARCHAR(255) NOT NULL,
	"LAST_NAME" VARCHAR(255) NOT NULL,
	"GENDER" "GENDER" NOT NULL,
	FOREIGN KEY ("ACCOUNT_ID") REFERENCES "ACCOUNTS" ("ID")
);
--#5
CREATE TABLE "ACCOUNT_AUTH_HISTORIES" (
	"ACCOUNT_ID" UUID,
	"IS_SUCCESS" BOOLEAN,
	"ATTEMPTED_AT" TIMESTAMP WITHOUT TIME ZONE,
	PRIMARY KEY ("ACCOUNT_ID", "ATTEMPTED_AT"),
	FOREIGN KEY ("ACCOUNT_ID") REFERENCES "ACCOUNTS" ("ID")
);

--#6
SELECT * FROM "ACCOUNTS" LEFT JOIN "PROFILES" ON "ACCOUNTS"."ID" = "PROFILES"."ACCOUNT_ID";
--#7
SELECT * FROM "ACCOUNTS" CROSS JOIN "PROFILES";
--#8
SELECT "GENDER",COUNT("GENDER") FROM "PROFILES" GROUP BY "GENDER";
--#9
SELECT "FIRST_NAME", "LAST_NAME", "GENDER", "CREATED_AT" FROM "ACCOUNTS", "PROFILES" WHERE "CREATED_AT" > '2023-08-01' AND "CREATED_AT" < '2023-09-01';
--#10
SELECT "EMAIL", "FIRST_NAME", "LAST_NAME", "GENDER", "ATTEMPTED_AT" FROM "ACCOUNTS", "PROFILES", "ACCOUNT_AUTH_HISTORIES" ORDER BY "ATTEMPTED_AT";
--#11
SELECT "EMAIL", "FIRST_NAME", "LAST_NAME", "GENDER" FROM "ACCOUNTS", "PROFILES", "ACCOUNT_AUTH_HISTORIES" WHERE "IS_SUCCESS" = TRUE AND "CREATED_AT" > '2023-08-10' AND "CREATED_AT" < '2023-09-01';
--#12
SELECT * FROM "ACCOUNT_AUTH_HISTORIES" LIMIT 10;




